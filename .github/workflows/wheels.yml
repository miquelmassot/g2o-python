name: Wheels
on:
  push:
    tags:
      - v*
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'     
        required: true
        default: 'warning'

jobs:
  build_wheels:
    name: Wheels on ${{ matrix.os_dist.os }} for ${{ matrix.os_dist.dist}}
    runs-on: ${{ matrix.os_dist.os }}
    strategy:
      matrix:
        os_dist: [
          {os: ubuntu-latest, dist: cp36-manylinux_x86_64},
          {os: ubuntu-latest, dist: cp37-manylinux_x86_64},
          {os: ubuntu-latest, dist: cp38-manylinux_x86_64},
          {os: ubuntu-latest, dist: cp39-manylinux_x86_64},
          {os: ubuntu-latest, dist: cp310-manylinux_x86_64},
          {os: ubuntu-latest, dist: cp311-manylinux_x86_64},
          {os: macos-latest, dist: cp36-macosx_x86_64, macosarch: x86_64},
          {os: macos-latest, dist: cp37-macosx_x86_64, macosarch: x86_64},
          {os: macos-latest, dist: cp38-macosx_x86_64, macosarch: x86_64},
          {os: macos-latest, dist: cp39-macosx_x86_64, macosarch: x86_64},
          {os: macos-latest, dist: cp310-macosx_x86_64, macosarch: x86_64},
          {os: macos-latest, dist: cp311-macosx_x86_64, macosarch: x86_64},
          {os: macos-latest, dist: cp38-macosx_arm64, macosarch: arm64},
          {os: macos-latest, dist: cp39-macosx_arm64, macosarch: arm64},
          {os: macos-latest, dist: cp310-macosx_arm64, macosarch: arm64},
          {os: macos-latest, dist: cp311-macosx_arm64, macosarch: arm64},
          {os: windows-latest, dist: cp36-win_amd64},
          {os: windows-latest, dist: cp37-win_amd64},
          {os: windows-latest, dist: cp38-win_amd64},
          {os: windows-latest, dist: cp39-win_amd64},
          {os: windows-latest, dist: cp310-win_amd64},
          {os: windows-latest, dist: cp311-win_amd64},
          {os: windows-latest, dist: cp36-win32},
          {os: windows-latest, dist: cp37-win32},
        ]
    env:
      CIBW_BUILD: "${{ matrix.os_dist.dist }}"
      CIBW_ARCHS_MACOS: "${{ matrix.os_dist.macosarch }}"
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: actions/setup-python@v4
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.12.3
        env:
          CIBW_BUILD_VERBOSITY: 1
        with:
          package-dir: .
          output-dir: wheelhouse
          config-file: "{package}/pyproject.toml"
      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl
  
  make_sdist:
    name: Make SDist
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Build SDist
      run: pipx run build --sdist
    - uses: actions/upload-artifact@v3
      with:
        path: dist/*.tar.gz

  upload_all:
    needs: [build_wheels, make_sdist]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: artifact
        path: dist
    - uses: pypa/gh-action-pypi-publish@v1.8.1
      with:
        skip_existing: true
        user: __token__
        password: ${{ secrets.pypi_password }}
